{"version":3,"sources":["utils/common.ts","services/CustomerService.ts","services/transform/CustomerTransform.ts","types/enum/customer-enum.ts","types/enum/member-enum.ts","components/tab-with-url-state/NotAuth.tsx","components/tab-with-url-state/index.tsx","utils/hooks/useForceUpdate.ts"],"names":["common","fn","setTimeout","source","cloneDeep","rest","some","v","array","x","y","temp","time","Promise","resolve","s","t","isDevEnv","console","log","this","deepClone","slice","downloadUrl","bff","get","params","url","responseType","then","res","filename","decodeURIComponent","split","pop","shift","blob","Blob","data","objectUrl","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","catch","err","message","info","list","iteratee","childrenKey","keys","traceKeys","node","result","push","Array","isArray","length","forEach","val","key","storage","value","getItem","str","i","len","jsonString","defaultValue","JSON","parse","condition","item","path","trim","filter","join","CustomerService","post","CustomerTransform","transformPvtCustomerQuery","transformPvtCustomerResponse","transformPubCustomerQuery","transformPubCustomerResponse","dataSource","isDistributed","status","PubCustomerStatusEnum","distributed","put","fixLastErrorReason","text","undefined","pickNotNullKey","target","Object","handlerPageParams","query","pageIndex","Number","pageSize","phase","AssignPhaseEnum","marketing","sales","salesman","project","assignResult","invalidEnum","InvalidReasonEnum","all","clueDuplication","invalidPhone","noIntention","other","statusEnum","invalid","undistributed","initPager","pager","current","start_business_time","registeredAt","start","end_business_time","end","page","toString","page_size","app_id","accessSystem","proj_id","province","area","city","is_assigned","tabKey","intention_levels","intentionDegree","test","customer","phone","cst_name","PvtCustomerStatusEnum","assign_option","getAssignOption","assign_result","getAssignResultEnum","start_assign_time","assignedAt","end_assign_time","ids","SalesId","SalesType","getGRPCSalesType","type","items","map","protectionList","protection_list","appId","appName","app_name","protectStatus","protect_status","protectDueTime","protect_due_time","proj_sales","id","Math","random","name","businessTime","business_time","distributedProjIds","projects","distributedInfo","intention_level","distributedResults","lastErrorReason","last_error_reason","risk_level","total","assign_status","transformStatusToNumber","sourceOfClues","platform","sourcePlatform","create_start_time","creationTime","create_end_time","salesIds","salesType","proj_ids","assign_start_time","distributionTime","assign_end_time","invalid_start_time","invalidTime","invalid_end_time","invalid_reason","transformInvalidReasonEnum","invalidReason","clueType","distributedAt","assign_time","createdAt","create_time","invalidedAt","invalid_time","profile","entries","safetyParseJSON","cst_info","ProjectStatusEnum","ExportStatusEnum","CustomerInvalidCategoryEnum","RiskLevel","IntentionLevelEnum","RolesTypeEnum","salesRoleList","label","broker","role","NotAuth","permission","children","className","to","TabWithUrlState","props","activeKey","onChange","paramKey","paneList","forceUpdate","useReducer","c","useHistory","history","setUrlParams","useSelector","root","global","grayscale","tabPaneConf","checkIsDisplay","ref","React","defaultActiveKey","tabPane","onTabChange","navigatorUtils","getUrlParamString","currentKey","handlerFirstRender","listen","event","eValue","search","pane","TabPane","tab","Tabs"],"mappings":"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","file":"static/js/3.246b8f06.chunk.js","sourcesContent":["import {cloneDeep} from 'lodash';\nimport {bff} from './request';\nimport {message} from 'antd';\nimport {isDevEnv} from './constants';\n\nclass Common {\n  // 组件重新拉取数据 设置统一超时\n  reload(fn: (...args: any[]) => void | Promise<void> | Promise<any>) {\n    setTimeout(fn, 800);\n  }\n\n  // 深拷贝一个对象\n  deepClone<T>(source: T): T {\n    return cloneDeep(source);\n  }\n\n  // 合并多个loading状态 最终状态为最长的loading\n  mergeLoading(...rest: boolean[]): boolean {\n    return rest.some(v => v === true);\n  }\n\n  // 交换数组两个索引数据位置\n  swap<T>(array: T[], x: number, y: number): T[] {\n    const temp = array[x];\n    array[x] = array[y];\n    array[y] = temp;\n    return array;\n  }\n\n  sleep(time = 2000) {\n    return new Promise(resolve => setTimeout(resolve, time));\n  }\n\n  debugLog(s: string, ...t: unknown[]) {\n    isDevEnv() && console.log(s, this.deepClone(t[0]), ...t.slice(1));\n  }\n\n  /**\n   * @description 下载文件\n   * @author huk10\n   * @date 2020/12/23\n   * @param {string} downloadUrl\n   * @memberof Utils\n   */\n  downloadFile(downloadUrl: string) {\n    // 方案一 chrome 有问题\n    // window.open(downloadUrl, '_blank');\n    // 方案二 chrome有限制 https 不能下载http\n    // https://www.ghacks.net/2020/10/08/chrome-is-blocking-downloads-here-is-why/\n    // const a = document.createElement('a');\n    // a.href = downloadUrl;\n    // a.download = decodeURIComponent(downloadUrl).split('/').pop().split('?').shift();\n    // document.body.appendChild(a);\n    // a.click();\n    // a.remove();\n    // 方案三 要求同源\n    // const xhr = new XMLHttpRequest()\n    // xhr.responseType = 'blob'\n    // xhr.open(\"GET\", downloadUrl)\n    // xhr.send(null)\n    // xhr.onload = function(ev) {\n    //   console.log(ev)\n    // }\n    // 方案四\n    bff\n      .get('/utils/download', {params: {url: downloadUrl}, responseType: 'blob'})\n      .then(res => {\n        const filename = decodeURIComponent(downloadUrl).split('/').pop().split('?').shift();\n        const blob = new Blob([res.data]);\n        const objectUrl = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = objectUrl;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n        window.URL.revokeObjectURL(objectUrl);\n      })\n      .catch(err => message.info(err.message));\n  }\n\n  /**\n   * @description 遍历多叉数结构\n   * @template T1\n   * @template T2\n   * @param {T1[]} list\n   * @param {((item: T1) => T2 | null)} iteratee\n   * @param {string} [childrenKey='children']\n   * @return {*}  {T2[]}\n   * @memberof Utils\n   */\n  mapTree<T1, T2>(list: T1[], iteratee: (item: T1) => T2 | null, childrenKey: string = 'children'): T2[] {\n    const keys: T2[] = [];\n    const traceKeys = (node: T1) => {\n      const result = iteratee(node);\n      if (result !== null) {\n        keys.push(result);\n      }\n      if (Array.isArray(node[childrenKey]) && node[childrenKey].length > 0) {\n        node[childrenKey].forEach(v => traceKeys(v));\n      }\n    };\n    list.forEach(val => traceKeys(val));\n    return keys;\n  }\n  /**\n   * @description 获取并检查本地存储的数据是否正确\n   * @author huk10\n   * @date 2020/12/23\n   * @param {string} key\n   * @param {Storage} storage localStorage or sessionStorage\n   * @return {*}  {(string | null)}\n   * @memberof Utils\n   */\n  getStorageItemAndCheckIsEffective(key: string, storage: Storage): string | null {\n    const value = storage.getItem(key);\n    if (value && value !== 'undefined' && value !== 'null') {\n      return value;\n    }\n    return null;\n  }\n\n  textHideShow(str: string): string {\n    if (!str) return '';\n    let s = '';\n    for (let i = 0, len = str.length; i < len; i++) {\n      if (i < 2 || i === len - 1) {\n        s += str[i];\n      } else {\n        s += '*';\n      }\n    }\n    return s;\n  }\n  /* 安全解析json */\n  safetyParseJSON<T>(jsonString: string | undefined, defaultValue: T): T {\n    if (!jsonString) return defaultValue;\n    try {\n      return JSON.parse(jsonString);\n    } catch (err) {\n      return defaultValue;\n    }\n  }\n  /**\n   * 将数组用给定的条件分为两个部分, left and right 其中条件为真的会进入left数组\n   * @param array\n   * @param condition\n   */\n  spliceBy<T>(array: T[], condition: (item: T) => boolean): [T[], T[]] {\n    const result = [[], []] as [T[], T[]];\n    for (const item of array) {\n      if (condition(item)) {\n        result[0].push(item);\n      } else {\n        result[1].push(item);\n      }\n    }\n    return result;\n  }\n  /**\n   * 去掉多余的 / 并在前面添加 后面去掉\n   * @author huk10\n   * @date 2021/9/3\n   */\n  fixRoutePath(path): string {\n    return [\n      '',\n      ...path\n        .trim()\n        .split('/')\n        .filter(val => val),\n    ].join('/');\n  }\n}\n\nexport const common = new Common();\n","import {bff} from '../utils/request';\nimport {IdAndName, TableResponse, ICustomer} from '../types/old-type';\nimport {CustomerTransform} from './transform/CustomerTransform';\nimport {PubCustomerStatusEnum} from '../types/enum';\n\n// 潜客相关\nexport class CustomerService {\n  /**\n   * 获取潜客列表数据\n   * @param params\n   */\n  static getCustomerList(params: ICustomer.QueryPvtCustomer): Promise<ICustomer.QueryPvtCustomerResponse> {\n    return bff\n      .post('/customer/private/list', CustomerTransform.transformPvtCustomerQuery(params))\n      .then(res => CustomerTransform.transformPvtCustomerResponse(res.data));\n  }\n\n  /**\n   * 获取公域潜客列表\n   * @author huk10\n   * @date 2021/03/11\n   * @static\n   * @param params\n   */\n  static getPubCustomerList(params: ICustomer.QueryPubCustomer): Promise<TableResponse<ICustomer.PubCustomer>> {\n    return bff\n      .post('/customer/public/list', CustomerTransform.transformPubCustomerQuery(params))\n      .then(res => CustomerTransform.transformPubCustomerResponse(res.data))\n      .then(res => {\n        res.dataSource.forEach(value => {\n          value.isDistributed = params.status === PubCustomerStatusEnum.distributed;\n        });\n        return res;\n      });\n  }\n\n  /**\n   * 获取浏览历史记录列表数据\n   * @param {ICustomer.QueryBrowsingHistory} params\n   */\n  static async getCustomerBehaviorRecordList(\n    params: ICustomer.QueryBrowsingHistory\n  ): Promise<ICustomer.BrowsingHistoryList> {\n    return bff.get('/customer/private/behavior-records', {params}).then(res => res.data);\n  }\n\n  /**\n   * 将一个公域潜客无效掉\n   * @author huk10\n   * @date 2021/03/11\n   * @static\n   * @param params\n   */\n  static invalidPubCustomer(params: ICustomer.invalidateActionRequest): Promise<string> {\n    return bff.put('/customer/public/invalid', params).then(res => res.data);\n  }\n\n  /**\n   * 将一个公域潜客置为有效\n   * @author huk10\n   * @date 2021/03/11\n   * @static\n   * @param params\n   */\n  static validPubCustomer(params: ICustomer.validateActionRequest): Promise<string> {\n    return bff.put('/customer/public/valid', params).then(res => res.data);\n  }\n\n  /**\n   * 批量分发公域潜客\n   * @author huk10\n   * @date 2021/03/11\n   * @static\n   * @param params\n   */\n  static batchAssignPubCustomer(params: ICustomer.batchAssignRequest): Promise<string> {\n    return bff.put('/customer/public/batch-assign', params).then(res => res.data);\n  }\n\n  /**\n   * 公域潜客来源平台\n   * @author huk10\n   * @date 2021/03/22\n   * @static\n   */\n  static getPubCustomerSourcePlatformOptions(): Promise<IdAndName[]> {\n    return bff.get('/customer/public/source-platform-list').then(res => res.data);\n  }\n\n  /**\n   * 公域潜客线索来源\n   * @author huk10\n   * @date 2021/03/22\n   * @static\n   */\n  static getSourceOfCluesPubCustomer(): Promise<IdAndName[]> {\n    return bff.get('/customer/public/source-of-clues-list').then(res => res.data);\n  }\n}\n","import {NSCustomer} from '../../types/new-type/CustomerTypes';\nimport {ICustomer} from '../../types/old-type';\nimport {\n  AssignPhaseEnum,\n  getGRPCSalesType,\n  InvalidReasonEnum,\n  PubCustomerStatusEnum,\n  PvtCustomerStatusEnum,\n} from '../../types/enum';\nimport {common} from '../../utils/common';\n\n/**\n * 服务端返回的格式是 错误: 错误原因  但是我们这里不需要错误两个字\n * @author huk10\n * @date 2021/8/10\n */\nexport function fixLastErrorReason(text: string | undefined): string {\n  if (text === undefined) return '';\n  const slice = text.split(/[:：]/);\n  if (slice.length >= 2) return slice[1];\n  return slice[0];\n}\n\nexport function pickNotNullKey(target: any): any {\n  const result: any = {};\n  for (const key of Object.keys(target)) {\n    if (target[key] !== undefined && target[key] !== '') {\n      result[key] = target[key];\n    }\n  }\n  return result;\n}\nexport function handlerPageParams<T extends {pageIndex?: number; pageSize?: number}>(query: T): T {\n  query.pageIndex = query.pageIndex ? Number(query.pageIndex) : 1;\n  query.pageSize = query.pageSize ? Number(query.pageSize) : 10;\n  if (query.pageSize < 10) query.pageSize = 10;\n  if (query.pageIndex < 1) query.pageIndex = 1;\n  return query;\n}\n\nexport class CustomerTransform {\n  /**\n   * @author huk10\n   * @date 2021/06/11\n   * @private\n   * @param phase\n   */\n  private static getAssignOption(phase: AssignPhaseEnum): string | undefined {\n    // 字段用在 已分发 tab 页 其他 tab 页就用 \"\"\n    /**\n     const (\n     ONLY_PROJ    = \"ONLY_PROJ\"\n     ONLY_XS_POOL = \"ONLY_XS_POOL\"\n     ONLY_XX_POOL = \"ONLY_XX_POOL\"\n     ANY_SALES    = \"ANY_SALES\"\n     )\n     */\n    switch (phase as AssignPhaseEnum) {\n      case AssignPhaseEnum.marketing:\n        return 'ONLY_XX_POOL';\n      case AssignPhaseEnum.sales:\n        return 'ONLY_XS_POOL';\n      case AssignPhaseEnum.salesman:\n        return 'ANY_SALES';\n      case AssignPhaseEnum.project:\n        return 'ONLY_PROJ';\n      default:\n        return undefined;\n    }\n  }\n  /**\n   * @author huk10\n   * @date 2021/06/11\n   * @param assignResult\n   * @private\n   */\n  private static getAssignResultEnum(assignResult: ICustomer.QueryPvtCustomer['assignResult']): number {\n    // 字段用在 已分发 tab 页 其他 tab 页就用 0\n    // 分发结果 0 全部 1 成功 2 失败\n    switch (assignResult) {\n      case 'fail':\n        return 2;\n      case 'success':\n        return 1;\n      default:\n        return 0;\n    }\n  }\n  /**\n   * 转换无效原因的枚举值\n   * @author huk10\n   * @date 2021/03/26\n   * @param invalidEnum\n   * @private\n   */\n  private static transformInvalidReasonEnum(invalidEnum: InvalidReasonEnum) {\n    // 0,正常或未设置;1,其他原因;2,无效电话;3,无购房意向;4,重复线索\n    switch (invalidEnum) {\n      case InvalidReasonEnum.all:\n        return 0;\n      case InvalidReasonEnum.clueDuplication:\n        return 4;\n      case InvalidReasonEnum.invalidPhone:\n        return 2;\n      case InvalidReasonEnum.noIntention:\n        return 3;\n      case InvalidReasonEnum.other:\n        return 1;\n      default:\n        return 0;\n    }\n  }\n  /**\n   * 转换公域线索不同tab对应的枚举值\n   * @author huk10\n   * @date 2021/03/26\n   * @private\n   * @param statusEnum\n   */\n  private static transformStatusToNumber(statusEnum: ICustomer.QueryPubCustomer['status']) {\n    // 分发状态 0 待分发 1 已分发 2 无效 @required\n    switch (statusEnum) {\n      case PubCustomerStatusEnum.distributed:\n        return 1;\n      case PubCustomerStatusEnum.invalid:\n        return 2;\n      case PubCustomerStatusEnum.undistributed:\n        return 0;\n      default:\n        return 0;\n    }\n  }\n\n  /**\n   * @author huk10\n   * @date 2020/12/17\n   */\n  static transformPvtCustomerQuery(query: ICustomer.QueryPvtCustomer): NSCustomer.PvtCstListQuery {\n    query = pickNotNullKey(query) as ICustomer.QueryPvtCustomer;\n    const initPager = handlerPageParams({\n      pageSize: query.pager?.pageSize,\n      pageIndex: query.pager?.current,\n    });\n    query.pager = {pageSize: initPager.pageSize, current: initPager.pageIndex};\n\n    const params: NSCustomer.PvtCstListQuery = {\n      start_business_time: query.registeredAt?.start,\n      end_business_time: query.registeredAt?.end,\n      page: query.pager.current?.toString(),\n      page_size: query.pager.pageSize?.toString(),\n      app_id: query.accessSystem === 'all' ? '' : query.accessSystem,\n      sales: [],\n      proj_id: query.project?.join(','),\n      province: query.area?.province,\n      city: query.area?.city,\n      is_assigned: query.tabKey,\n      intention_levels: query.intentionDegree || [],\n      // risk_levels: query.riskLevel || [],\n    };\n    if (/^[0-9]{7,13}$/.test(query.customer || '')) {\n      params.phone = query.customer;\n    } else {\n      params.cst_name = query.customer;\n    }\n\n    switch (query.tabKey) {\n      case PvtCustomerStatusEnum.distributed:\n        params.assign_option = this.getAssignOption(query.phase as AssignPhaseEnum);\n        params.assign_result = this.getAssignResultEnum(query.assignResult);\n        params.start_assign_time = query.assignedAt?.start;\n        params.end_assign_time = query.assignedAt?.end;\n        query?.salesman?.ids?.forEach(val => {\n          params.sales!.push({\n            SalesId: val,\n            SalesType: getGRPCSalesType(query.salesman?.type),\n          });\n        });\n        break;\n      default:\n    }\n    return params;\n  }\n  /**\n   * @author huk10\n   * @date 2020/12/17\n   * @param data\n   * @return {*}  {ICustomer.CustomerItem[]}\n   * @memberof CustomerDto\n   */\n  static transformPvtCustomerResponse(data: NSCustomer.PvtCstListResponse): ICustomer.QueryPvtCustomerResponse {\n    const items = (data.items || []).map(item => {\n      const protectionList: ICustomer.PvtCustomer['protectionList'] = (item.protection_list || []).map(val => ({\n        appId: val.app_id as string,\n        appName: val.app_name as string,\n        protectStatus: val.protect_status as '是' | '否',\n        protectDueTime: val.protect_due_time as string,\n      }));\n      const assignResult = (item.proj_sales || [])?.map(val => ({id: Math.random().toString(), name: val}));\n      return {\n        id: item.id as string,\n        customer: item.cst_name as string,\n        phone: item.phone as string,\n        businessTime: item.business_time as string,\n        distributedProjIds: item.projects!.map(val => val.id as string),\n        protectionList: protectionList || [],\n        distributedInfo: assignResult,\n        // 如果没传这个字段就是未知\n        intentionDegree: (item.intention_level ?? 'D') as 'A' | 'B' | 'C' | 'D',\n        area: item.area ?? '',\n        // 是否已分发\n        isDistributed: item.is_assigned === '1',\n        // 分发结果：1成功，2失败\n        distributedResults: item.assign_result === 1,\n        lastErrorReason: fixLastErrorReason(item.last_error_reason),\n        risk_level: item.risk_level || '',\n      };\n    });\n    return {\n      dataSource: items,\n      current: +data.page || 1,\n      pageSize: +data.page_size || 10,\n      total: data.total,\n    };\n  }\n  /**\n   * 转换为rpc查询公域线索参数\n   * @author huk10\n   * @date 2021/03/26\n   * @private\n   * @param query\n   */\n  static transformPubCustomerQuery(query: ICustomer.QueryPubCustomer): NSCustomer.PubCstListQuery {\n    query = pickNotNullKey(query) as ICustomer.QueryPubCustomer;\n    handlerPageParams(query);\n\n    const params: NSCustomer.PubCstListQuery = {\n      page: query?.current as any,\n      page_size: query?.pageSize,\n      assign_status: this.transformStatusToNumber(query.status),\n      source: query.sourceOfClues,\n      platform: query.sourcePlatform,\n    };\n    if (/^[0-9]{7,13}$/.test(query.customer || '')) {\n      params.phone = query.customer;\n    } else {\n      params.name = query.customer;\n    }\n    switch (query.status) {\n      case PubCustomerStatusEnum.undistributed:\n        params.create_start_time = query.creationTime?.[0];\n        params.create_end_time = query.creationTime?.[1];\n        break;\n      case PubCustomerStatusEnum.distributed:\n        params.sales = [];\n        query?.salesIds?.forEach(val => {\n          params.sales!.push({\n            SalesId: val,\n            SalesType: getGRPCSalesType(query.salesType),\n          });\n        });\n        params.proj_ids = query.project ?? undefined;\n        params.assign_start_time = query.distributionTime?.[0];\n        params.assign_end_time = query.distributionTime?.[1];\n        // params.assign_option = CustomerDto.getAssignOption(query.phase as AssignPhaseEnum);\n        params.assign_result = this.getAssignResultEnum(query.assignResult);\n        break;\n      case PubCustomerStatusEnum.invalid:\n        params.invalid_start_time = query.invalidTime?.[0];\n        params.invalid_end_time = query.invalidTime?.[1];\n        params.invalid_reason = this.transformInvalidReasonEnum(query.invalidReason || InvalidReasonEnum.all);\n        break;\n      default:\n    }\n    return pickNotNullKey(params);\n  }\n  /**\n   * 转换公域线索列表\n   * @author huk10\n   * @date 2021/03/26\n   * @private\n   * @param result\n   */\n  static transformPubCustomerResponse(result: NSCustomer.PubCstListResponse): ICustomer.QueryPubCustomerResponse {\n    function transform(item: NSCustomer.PubCstItem): ICustomer.PubCustomer {\n      return {\n        customer: item.name ?? '',\n        phone: item.phone ?? '',\n        clueType: item.type ?? '',\n        sourceOfClues: item.source ?? '',\n        sourcePlatform: item.platform ?? '',\n        invalidReason: item.invalid_reason ?? '',\n        distributedAt: item.assign_time ?? '',\n        createdAt: item.create_time ?? '',\n        invalidedAt: item.invalid_time ?? '',\n        distributedProjIds: (item.projects ?? []).map(val => val.id as string),\n        distributedInfo: item.proj_sales ?? [],\n        id: item.id as string,\n        profile: Object.entries(common.safetyParseJSON(item.cst_info, {})),\n        isDistributed: !!item.assign_time,\n        // 分发结果：1成功，2失败\n        distributedResults: item.assign_result === 1,\n        lastErrorReason: fixLastErrorReason(item.last_error_reason),\n        risk_level: item.risk_level || '',\n      };\n    }\n    return {\n      total: result.total ?? 0,\n      current: result.page ?? 1,\n      pageSize: result.page_size ?? 10,\n      dataSource: (result.list ?? []).map(transform),\n    };\n  }\n}\n","/// 枚举尽量使用字符串枚举\nexport enum ProjectStatusEnum {\n  disabled = 0,\n  noDisabled = 1,\n}\n\n// 导出状态\nexport enum ExportStatusEnum {\n  done = '1',\n  processing = '2',\n  timeout = '3',\n  fail = '4',\n}\n\n// 客户无效原因\nexport enum CustomerInvalidCategoryEnum {\n  invalidPhone,\n  noIntention,\n  other,\n}\n\n// 公域潜客无效原因\nexport enum InvalidReasonEnum {\n  invalidPhone = 1,\n  noIntention,\n  clueDuplication,\n  other,\n  all,\n}\n\n// 公域潜客状态Tab\nexport enum PubCustomerStatusEnum {\n  undistributed = '0',\n  distributed = '1',\n  invalid = '2',\n}\n\n// 私域潜客状态Tab\n// 该枚举的值和grpc的值是一致的\nexport enum PvtCustomerStatusEnum {\n  undistributed = '0',\n  distributed = '1',\n  invalid = '3',\n}\n\n// 分发到哪里了\nexport enum AssignPhaseEnum {\n  project = 'project',\n  sales = 'sales',\n  marketing = 'marketing',\n  salesman = 'salesman',\n}\n\n// 风险等级\n// (0 未知 1 低风险 2中风险 3高风险)空串表示全部\nexport enum RiskLevel {\n  high = '3',\n  mid = '2',\n  low = '1',\n  unknown = '0',\n}\n\n// 意向度\nexport enum IntentionLevelEnum {\n  high = 'A',\n  mid = 'B',\n  low = 'C',\n  unknown = 'D',\n}\n","/// 枚举尽量使用字符串枚举\n\nexport enum RolesTypeEnum {\n  // 不限\n  all = 'all',\n  // 置业顾问\n  sales = 'sales',\n  // 行销专员\n  marketing = 'marketing',\n  // 经纪人\n  broker = 'broker',\n}\n\nexport const salesRoleList = [\n  {value: RolesTypeEnum.all, label: '不限类型'},\n  {value: RolesTypeEnum.sales, label: '置业顾问'},\n  {value: RolesTypeEnum.marketing, label: '行销人员'},\n  {value: RolesTypeEnum.broker, label: '经纪人'},\n];\n\nexport function getGRPCSalesType(role: RolesTypeEnum | undefined): string {\n  if (!role) return '';\n  switch (role) {\n    case RolesTypeEnum.broker:\n      return '4';\n    case RolesTypeEnum.marketing:\n      return '2';\n    case RolesTypeEnum.sales:\n      return '1';\n    case RolesTypeEnum.all:\n      return '';\n    default:\n      return '';\n  }\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n// todo 传入权限点 或 布尔值\nexport function NotAuth({permission, children}: {permission: boolean; children: JSX.Element}): JSX.Element {\n  if (permission) return children;\n  return (\n    <div className=\"p-px-24 flex flex-col items-center justify-center h-full\">\n      <p>无页面访问权限</p>\n      <Link to=\"/\" className=\"qkzx-link\">\n        回到首页\n      </Link>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport {Tabs} from 'antd';\nimport {TabsProps, TabPaneProps} from 'antd/es/tabs';\nimport {NotAuth} from './NotAuth';\nimport {grayscaleKeys, navigatorUtils} from 'utils';\nimport {PermissionEnum} from 'utils/constants';\nimport {checkIsDisplay} from 'utils/hooks/useDisplay';\nimport {useForceUpdate} from 'utils/hooks/useForceUpdate';\nimport {useHistory} from 'utils/hooks/useHistory';\nimport {useSelector} from 'utils/hooks/useSelector';\n\ninterface PaneType extends TabPaneProps {\n  permission?: PermissionEnum | PermissionEnum[];\n  grayscale?: grayscaleKeys;\n}\n\ninterface TabWithUrlStateProps extends Omit<TabsProps, 'children'> {\n  paramKey: string;\n  paneList: PaneType[];\n}\n\n/**\n * 在页面刷新时可以直接跳转到上次的tab项\n * 缺点:\n *   1. 需要手动指定 URL 上的参数的 Key 的名称\n *   2. 同一级别的 Key 的名称如果相同的话 key 就不能有重复的\n *   3. 如果同级别 Key 的名称不同的话 那么 URL 会有废弃的 Key 无法清除(也不能清除)\n * @author huk10\n * @date 2021/02/07\n * @param props\n * @description tab组件能够控制TabPane组件的显示(页面组件是通过URL进入的,控制不了需要套权限组件禁止显示), 不需要套一层权限组件\n */\nexport function TabWithUrlState(props: TabWithUrlStateProps) {\n  const {activeKey, onChange, paramKey, paneList, ...other} = props;\n  const forceUpdate = useForceUpdate();\n  const {history, setUrlParams} = useHistory();\n  const {permission, grayscale} = useSelector(root => ({\n    permission: root.global.permission,\n    grayscale: root.global.grayscale,\n  }));\n\n  // 目前权限是不变的, 后面需要使用会触发渲染的权限和灰度\n  const tabPaneConf = paneList.filter(target =>\n    checkIsDisplay(permission, target.permission, grayscale, target.grayscale)\n  );\n\n  const ref = React.useRef({\n    activeKey: activeKey || other.defaultActiveKey,\n    onChange: onChange,\n    tabPane: tabPaneConf,\n  });\n\n  // 为了effect不增加依赖影响可能的逻辑, 将它绑定到这个ref上\n  ref.current.onChange = onChange;\n  ref.current.tabPane = tabPaneConf;\n\n  // 点击回调, 此时Key肯定是准确的\n  const onTabChange = React.useCallback(\n    (activeKey: string) => {\n      ref.current.activeKey = activeKey;\n      // 如果传递了 onChange 就由 onChange 触发更新, 否则就内部控制更新\n      onChange ? onChange(activeKey) : forceUpdate();\n      setUrlParams({[paramKey]: activeKey}, 'push');\n    },\n    [onChange]\n  );\n\n  function handlerFirstRender() {\n    // 从 URL 上取数据如果存在 Key 就取其 Value当做当前 Table Key\n    const key = navigatorUtils.getUrlParamString(paramKey).trim();\n    // 如果命中(URL上的key有效)\n    if (ref.current.tabPane.some(val => val.tabKey === key)) {\n      ref.current.activeKey = key;\n      ref.current.onChange && ref.current.onChange(key);\n      forceUpdate();\n      return;\n    }\n    // 如果有传递默认选项或受控的选项\n    if (ref.current.activeKey !== '') {\n      // 默认选项是否有效\n      if (ref.current.tabPane.some(val => val.tabKey === ref.current.activeKey)) {\n        setUrlParams({[paramKey]: ref.current.activeKey}, 'replace');\n        return;\n      }\n    }\n    // 没有传递默认选项或选项无效, 需跳转到有效的第一项\n    if (ref.current.tabPane.length > 0) {\n      const currentKey = ref.current.tabPane[0].tabKey;\n      ref.current.activeKey = currentKey;\n      ref.current.onChange && ref.current.onChange(currentKey);\n      setUrlParams({[paramKey]: currentKey}, 'replace');\n    }\n    // Tab 组件无权限查看任何内容\n  }\n\n  React.useEffect(() => {\n    // 处理默认激活项\n    handlerFirstRender();\n    // 监听事件 如浏览器回退等或者其他的路由跳转操作\n    // 二级 Tab 是删不掉的因为组件没有卸载 需要手工在上层Tab操作\n    return history.listen(event => {\n      const eValue = navigatorUtils.getUrlParamString(paramKey, event.search);\n      if (eValue === ref.current.activeKey) return;\n      if (ref.current.tabPane.some(val => val.tabKey === eValue)) {\n        ref.current.activeKey = eValue;\n        ref.current.onChange && ref.current.onChange(eValue);\n        forceUpdate();\n      }\n    });\n  }, []);\n\n  return (\n    <NotAuth permission={tabPaneConf.length > 0}>\n      <Tabs onChange={onTabChange} activeKey={ref.current.activeKey} {...other}>\n        {tabPaneConf.map(pane => (\n          <Tabs.TabPane key={pane.tabKey} tabKey={pane.tabKey} tab={pane.tab}>\n            {pane.children}\n          </Tabs.TabPane>\n        ))}\n      </Tabs>\n    </NotAuth>\n  );\n}\n\nexport const TabPane = Tabs.TabPane;\n","import {useReducer} from 'react';\n/**\n * 触发组件更新\n * @author huk10\n * @date 2021/8/30\n */\nexport function useForceUpdate() {\n  return useReducer(c => (c += 1), 0)[1];\n}\n"],"sourceRoot":""}